services:
  server:
    build: 
      context: ./server  
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    stdin_open: true
    tty: true  # Keeps the container running for debugging
    depends_on:
      postgres_db:
        condition: service_healthy
    env_file:
      - ./server/.env
    networks:
      - prisma-network

  postgres_db:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    hostname: postgres_db
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1212
      POSTGRES_DB: booking
      TZ: Europe/Kyiv
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - prisma-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d booking"]
      interval: 5s
      timeout: 2s
      retries: 20

  # client:
  #   build: 
  #     context: ./client
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   stdin_open: true
  #   tty: true  # Keeps the container running for debugging
  #   env_file:
  #     - ./client/.env
  #   networks:
  #     - prisma-network
  #   volumes:
  #     - ./client/dist:/app/dist  # білдить локально

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - prisma-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 5
  
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./client/dist:/usr/share/nginx/html:ro
      - C:\Users\LEGION\certificate.crt:/etc/nginx/certs/ssl.crt
      - C:\Users\LEGION\privatekey.key:/etc/nginx/certs/ssl.key
    networks:
      - prisma-network
    depends_on:
      - server

networks:
  prisma-network:
    name: prisma-network
    driver: bridge

volumes:
  postgres_data:
    driver: local
    name: postgres_data

  redis_data:
    name: redis_data

  # prisma_data:
  #   driver: local